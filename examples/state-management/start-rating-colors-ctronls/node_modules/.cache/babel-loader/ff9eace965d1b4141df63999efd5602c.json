{"ast":null,"code":"var _jsxFileName = \"/home/wesley/node/javascript/learn-react/examples/state-management/start-rating-colors/src/NewStarRating.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FaStar } from \"react-icons/fa\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createArray = length => [...Array(length)];\n\nconst Star = _ref => {\n  let {\n    selected = false,\n    onSelect = f => f\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FaStar, {\n    color: selected ? \"red\" : \"grey\",\n    onClick: onSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; //\n// NewStarRating的剩余的参数全部集中在...props里面，防止用户注入有害的参数到components里面 ??\n// 这会有什么问题?\n\n\n_c = Star;\n\nfunction NewStarRating(_ref2) {\n  _s();\n\n  let {\n    style = {},\n    totalStars = 5,\n    ...props\n  } = _ref2;\n  const [selectedStars, setSelectedStars] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"5px\",\n      ...style\n    },\n    ...props,\n    children: [createArray(totalStars).map((n, i) => /*#__PURE__*/_jsxDEV(Star, {\n      selected: selectedStars > i,\n      onSelect: () => setSelectedStars(i + 1)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [selectedStars, \" of \", totalStars, \" stars.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewStarRating, \"/gpowNhmCBkEVohSyCrDqCxkiwM=\");\n\n_c2 = NewStarRating;\nexport default NewStarRating;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Star\");\n$RefreshReg$(_c2, \"NewStarRating\");","map":{"version":3,"sources":["/home/wesley/node/javascript/learn-react/examples/state-management/start-rating-colors/src/NewStarRating.js"],"names":["React","useState","FaStar","createArray","length","Array","Star","selected","onSelect","f","NewStarRating","style","totalStars","props","selectedStars","setSelectedStars","padding","map","n","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,OAAO,WAAP;;;AAEA,MAAMC,WAAW,GAAGC,MAAM,IAAI,CAAC,GAAGC,KAAK,CAACD,MAAD,CAAT,CAA9B;;AAEA,MAAME,IAAI,GAAG;AAAA,MAAC;AAACC,IAAAA,QAAQ,GAAG,KAAZ;AAAmBC,IAAAA,QAAQ,GAAGC,CAAC,IAAIA;AAAnC,GAAD;AAAA,sBACT,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEF,QAAQ,GAAG,KAAH,GAAW,MAAlC;AAA0C,IAAA,OAAO,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,UADS;AAAA,CAAb,C,CAKA;AACA;AACA;;;KAPMF,I;;AAQN,SAASI,aAAT,QAA+D;AAAA;;AAAA,MAAxC;AAACC,IAAAA,KAAK,GAAG,EAAT;AAAaC,IAAAA,UAAU,GAAG,CAA1B;AAA6B,OAAGC;AAAhC,GAAwC;AAC3D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAlD;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAE,KAAV;AAAiB,SAAGL;AAApB,KAAZ;AAAA,OAA4CE,KAA5C;AAAA,eACEV,WAAW,CAACS,UAAD,CAAX,CAAwBK,GAAxB,CAA4B,CAACC,CAAD,EAAIC,CAAJ,kBACzB,QAAC,IAAD;AAEG,MAAA,QAAQ,EAAEL,aAAa,GAAGK,CAF7B;AAGG,MAAA,QAAQ,EAAE,MAAMJ,gBAAgB,CAACI,CAAC,GAAC,CAAH;AAHnC,OACQA,CADR;AAAA;AAAA;AAAA;AAAA,YADH,CADF,eAQC;AAAA,iBAAIL,aAAJ,UAAuBF,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAdQF,a;;MAAAA,a;AAgBT,eAAeA,aAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {FaStar} from \"react-icons/fa\"\nimport './App.css';\n\nconst createArray = length => [...Array(length)]\n\nconst Star = ({selected = false, onSelect = f => f}) => (\n    <FaStar color={selected ? \"red\" : \"grey\"} onClick={onSelect}/>\n)\n\n\n//\n// NewStarRating的剩余的参数全部集中在...props里面，防止用户注入有害的参数到components里面 ??\n// 这会有什么问题?\nfunction NewStarRating({style = {}, totalStars = 5, ...props}) {\n    const [selectedStars, setSelectedStars] = useState(0)\n    return (\n        <div style={{padding: \"5px\", ...style}} {...props}>\n         {createArray(totalStars).map((n, i) => (\n             <Star \n                key={i} \n                selected={selectedStars > i}\n                onSelect={() => setSelectedStars(i+1)}\n            />\n          ))}\n         <p>{selectedStars} of {totalStars} stars.</p>\n        </div>\n    )\n}\n\nexport default NewStarRating;"]},"metadata":{},"sourceType":"module"}